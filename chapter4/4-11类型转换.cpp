#include <iostream>
using namespace std;
int main()
{
    int ival = 3.14159 + 3;
    //先把3转换成double型 与3.14159相加 然后结果舍去小数部分。得到6


    int a1 = -42;
    unsigned int a2 = 10;
    cout<<a1+a2<<endl;
    //负数转换成无符号数：这个负数加上无符号数的模  2^32 - N
    //-5对应正数5（00000101）→所有位取反（11111010）→加1(11111011)

    /*
        算术转换
            一个是有符号类型一个是无符号类型，其中无符号类型不小于带符号类型，则带符号类型转换成无符号类型

            带符号类型大于无符号类型，如果无符号类型的所有值都能存在该带符号类型中，则无符号类型运算对象转换成带符号类型，
            如果不能那么带符号类型转换成无符号类型
    */

    long long a3 = 10;
    cout<<a3 + a2<<endl;

    /*
        指针转换
            常量整数值0或者字面值nullptr能转换成任意指针类型

            指向任意非常量的指针能转换成void*

            指向任意对象的指针能转换成const void*

    */

    /*
        转换成bool类型
            在if判断语句中经常有对指针或算术类型进行转换来判断

        转换成常量
            允许将非常量指针转换成相应的常量指针，对于引用也是如此
    */


    return 0;
}
