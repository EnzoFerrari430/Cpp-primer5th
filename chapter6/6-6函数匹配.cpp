#include <iostream>
using namespace std;
/*
函数匹配第一步，确定候选函数
    候选函数的2个特征：与被调用的函数同名，函数的声明在调用点可见
函数匹配第二步，选出可行函数
    可行函数的2个特征：形参数量与本次调用提供的实参数量相等，每个实参的类型与对应的形参类型相同,或者能转换成形参类型
函数匹配第三步，选择最佳匹配函数
    精确匹配比需要类型转换的匹配更好

    ★编译器依次检查每个实参以确定哪个函数是最佳匹配。如果有且只有一个函数满足下列条件，则匹配成功
        1.该函数每个实参的匹配都不劣于其他可行函数需要的匹配
        2.至少有一个实参的匹配优于其他可行函数提供的匹配
    如果没有一个函数满足上面条件。编译器将报告二义性调用的信息
*/

void f(int a1,int a2)
{
    cout<<"int"<<endl;
}

void f(double a1,double a2)
{
    cout<<"double"<<endl;
}
int main()
{
    //f(42,2.56);  二义性

    return 0;
}
